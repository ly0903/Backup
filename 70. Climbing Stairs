"""
You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

Note: Given n will be a positive integer.
"""

#
class Solution(object):
    def climbStairs(self, n):
        """
        :type n: int
        :rtype: int
        """
        #ways to current step
        a = 1
        #ways to next step
        b = 1
        for i in range(n):
            #curr to next: 1 step, stil a ways
            #to next.next: from next 1 step (b ways) or from curr 2 steps once(a ways)
            a, b = b, a + b
        return a


# Top down - TLE
# time limited exceeded
class Solution(object):
    def climbStairs(self, n):
        """
        :type n: int
        :rtype: int
        """
        one = n
        two = n
        step = 0
        if n <= 3:
            return step + n
        if n > 3:
            step += 1
            one -= 1
            two -= 2
            return self.climbStairs(one) + self.climbStairs(two)
